@using DataModels
@using Repositories
@model List<AppointmentSchedule>
@inject CustomerRepository CustomerRepository

@{
	var scheduleTime = (DateTime)ViewData["ScheduleDate"];
	
}

<div class="table-responsive">
	<h2>Danh sách lịch hẹn ngày @scheduleTime.ToString("dd/MM/yyyy")</h2>
	<table class="table table-striped">
		<thead>
			<tr>
				<th scope="col">Thời gian bắt đầu</th>
				<th scope="col">Thời gian kết thúc</th>
				<th scope="col">Khách hàng</th>
				<th scope="col"></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var schedule in Model)
			{
				var customer = await CustomerRepository
				.GetCustomerByIdAsync(schedule.CustomerId);
				<tr>
					<td>@schedule.StartTime.ToString("HH:mm")</td>
					<td>@schedule.EndTime.ToString("HH:mm")</td>
					<td>
						
						@if (customer != null) {
							<text>@customer.FullName</text>
						}
						else
						{
							<span class="text-primary">Lịch hẹn cá nhân</span>
						}
					</td>
					<td>
						@if (customer == null)
						{
								<a class="btn btn-warning text-light" asp-controller="Schedule" asp-action="EditPersonalSchedule"
							   asp-route-dentistId="@schedule.DentistId" asp-route-startTimeStr="@schedule.StartTime.ToString()">
									<i class="icon-copy fa fa-edit" aria-hidden="true"></i>
								</a>
						
						}
					</td>
				</tr>


			}
		</tbody>
	</table>
</div>