	@using DataModels;
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager
@inject Repositories.DentistRepository DentistRepository
@inject Repositories.CustomerRepository CustomerRepository
@model List<MedicalRecord>
@{
	ViewData["Title"] = "Danh sách bệnh án";
	var AccountDentist = await UserManager.GetUserAsync(User);
}


	<div class="row">
		@if (await UserManager.IsInRoleAsync(AccountDentist, "Dentist"))
		{
			<div class="col-md-4 col-sm-12">
				<a class="btn btn-success text-light mb-3" asp-controller="MedicalRecord"
				   asp-action="AddMedicalRecord" asp-route-id="@ViewBag.id">
					Thêm hồ sơ bệnh án
				</a>
			</div>
		}
		@if (await UserManager.IsInRoleAsync(AccountDentist, "Employee"))
		{
			<form class="col-md-8 col-sm-12 row" method="post" asp-action="Index">
				<div class="form-group col-8">
					<input value="@ViewData["Text"]" name="text" type="text" class="form-control" placeholder="Tìm hồ sơ theo số điện thoại">
				</div>
				<button type="submit" class="btn btn-danger mb-4 text-light col-4">Tìm kiếm</button>
			</form>
		}
		
	</div>

	

	<div class="row">
		<div class="alert alert-primary mx-3">Số lượng bản ghi: @ViewData["Count"]</div>
	</div>



<div class="table-responsive">
	<table class="table table-striped">
		<thead>
			<tr>
				<th scope="col">Lần khám</th>
				<th scope="col">Ngày khám</th>
				<th scope="col">Dịch vụ</th>
				@if (await UserManager.IsInRoleAsync(AccountDentist, "Customer"))
				{
					<th scope="col">Nha sĩ khám</th>
				}
				else
				{
					<th scope="col">Bệnh nhân</th>
					<th>Kê đơn</th>
				}
				
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr id="row-@item.Id-@item.SequenceNumber">
					<td>@item.SequenceNumber</td>
					<td>@item.ExaminationDate</td>
					<td>@item.Service</td>
					<td>
						@if (!(await UserManager.IsInRoleAsync(AccountDentist, "Customer")))
						{
							
							var customer = await CustomerRepository.GetCustomerByIdAsync(item.CustomerId);
							var customerName = customer.FullName;

							<text>@customerName</text>
						}
						else
						{
							var examDentist = await DentistRepository.GetDentistByIdAsync(item.ExamDentistId);
							var examDentistName = examDentist.FullName;

							<text>@examDentistName</text>
						}
					</td>
					<td>
						@if (await UserManager.IsInRoleAsync(AccountDentist, "Dentist"))
						{
							<a class="btn btn-warning text-light"
							   href="/Prescription/Index?id=@item.Id&sequence=@item.SequenceNumber">
								Kê đơn
							</a>
						}
						
					</td>
					<td>
					@if (!(await UserManager.IsInRoleAsync(AccountDentist, "Customer")))
					{
						
							<a class="btn btn-warning text-light"
							   href="/MedicalRecord/Edit?id=@item.Id&sn=@item.SequenceNumber">
								<i class="icon-copy fa fa-edit" aria-hidden="true"></i>	
							</a>
							<button data-id="@item.Id" data-sequence="@item.SequenceNumber" type="button" class="btn btn-danger text-light delete-confirm-btn">
								<i class="icon-copy fa fa-trash-o" aria-hidden="true"></i>
							</button>
						
					}
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>

<div class="modal fade" id="confirmation-modal" tabindex="-1" role="dialog" style="display: none" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-body text-center font-18">
				<h4 class="padding-top-30 mb-30 weight-500">Bạn có chắc chắn muốn xóa hồ sơ bệnh nhân này?</h4>
				<div class="padding-bottom-30 row" style="max-width: 170px; margin: 0 auto;">
					<div class="col-6">
						<button type="button" class="btn btn-secondary border-radius-100 btn-block confirmation-btn" data-dismiss="modal"><i class="fa fa-times"></i></button>
						NO
					</div>
					<div class="col-6">
						<button type="button" class="btn btn-primary border-radius-100 btn-block confirmation-btn yes-btn" data-dismiss="modal"><i class="fa fa-check"></i></button>
						YES
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


@section Styles {
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" integrity="sha512-vKMx8UnXk60zUwyUnUPM3HbQo8QfmNx7+ltw8Pm5zLusl1XIfwcxo8DbWCqMGKaWeNxWA8yrx5v3SaVpMvR3CA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

}

@section Scripts {
	@* Toastr *@
	<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

	<script type="module">
		$(document).ready(function () {
			$('.delete-confirm-btn').on('click', function () {
				let id = $(this).attr('data-id');
				let sequence = $(this).attr("data-sequence")
				showModal(id);
				$('#confirmation-modal .yes-btn').off('click').on('click', function () {
					hideModal();
					$.ajax({
						url: '@Url.Action("Delete", "MedicalRecord")',
						type: 'POST',
						contentType: 'application/x-www-form-urlencoded',
						data: { id: id, sequence : sequence },
						success: function (data) {
							$(`#row-${id}-${sequence}`).remove();
							toastr.success(data, 'Notification', { timeOut: 2000 });
						},
						error: function (error) {
							toastr.error(error.responseText, 'Notification', { timeOut: 2000 });
						}
					});
				});
			});

			function showModal(id) {
				let modal = $('#confirmation-modal');
				modal.attr('data-id', id);
				modal.modal('show');
			}
			function hideModal() {
				let modal = $('#confirmation-modal');
				modal.attr('data-id', '');
				modal.modal('hide');
			}
		});
	</script>
	@if (TempData["Err"] != null)
	{
		<script>
			toastr.error('@TempData["Err"]', { timeOut: 2000 });
		</script>
	}
	@if (TempData["Success"] != null)
	{
		<script>
			toastr.success('@TempData["Success"]', { timeOut: 2000 });
		</script>
	}
}
